/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kake;

import java.io.File;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import kake.security.AES;
import kake.security.KeyPair;
import kake.security.RSAKeyGen;

/**
 *
 * @author Kritika
 */
public class encrypt_decrypt extends javax.swing.JFrame {

    /**
     * Creates new form encrypt_decrypt
     */
    
    /*
    *Encryption and decryption objects
    */
    
    AES aes;
    KeyPair keyPair;
    //String keyPairPath = "keys.properties";
    
    public encrypt_decrypt() {
        try{
            aes = new AES();
        }catch(GeneralSecurityException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error in initializing aes object", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        //keyPair = new KeyPair();
        //keyPair.loadFromFile(keyPairPath);
        keyPair = RSAKeyGen.generate();
        
        
        initComponents();
        //b_generateNewKeyPair.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        e_open = new javax.swing.JButton();
        e_save = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        d_open = new javax.swing.JButton();
        d_save = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        choose_key = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        e_openfield = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        e_savefield = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        d_openfield = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        d_savefield = new javax.swing.JTextArea();
        encrypt = new javax.swing.JButton();
        decrypt = new javax.swing.JButton();
        d_keyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 102));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("ENCRYPTION");

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kake/images/image4 (2).jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("KAKE");

        e_open.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        e_open.setForeground(new java.awt.Color(102, 0, 0));
        e_open.setText("OPEN");
        e_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_openActionPerformed(evt);
            }
        });

        e_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        e_save.setForeground(new java.awt.Color(102, 0, 0));
        e_save.setText("SAVE");
        e_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_saveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("DECRYPTION");

        d_open.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        d_open.setForeground(new java.awt.Color(102, 0, 0));
        d_open.setText("OPEN");
        d_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_openActionPerformed(evt);
            }
        });

        d_save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        d_save.setForeground(new java.awt.Color(102, 0, 0));
        d_save.setText("SAVE");
        d_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d_saveActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exit.setForeground(new java.awt.Color(102, 0, 0));
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        choose_key.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        choose_key.setForeground(new java.awt.Color(102, 0, 0));
        choose_key.setText("CHOOSE KEY");
        choose_key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choose_keyActionPerformed(evt);
            }
        });

        e_openfield.setColumns(20);
        e_openfield.setRows(5);
        jScrollPane1.setViewportView(e_openfield);

        e_savefield.setColumns(20);
        e_savefield.setRows(5);
        jScrollPane2.setViewportView(e_savefield);

        d_openfield.setColumns(20);
        d_openfield.setRows(5);
        jScrollPane3.setViewportView(d_openfield);

        d_savefield.setColumns(20);
        d_savefield.setRows(5);
        jScrollPane4.setViewportView(d_savefield);

        encrypt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        encrypt.setForeground(new java.awt.Color(102, 0, 0));
        encrypt.setText("ENCRYPT");
        encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptActionPerformed(evt);
            }
        });

        decrypt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        decrypt.setForeground(new java.awt.Color(102, 0, 0));
        decrypt.setText("DECRYPT");
        decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptActionPerformed(evt);
            }
        });

        d_keyLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 485, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(239, 239, 239))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(encrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 607, Short.MAX_VALUE)
                        .addComponent(decrypt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(e_open)
                            .addComponent(e_save))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                            .addComponent(jScrollPane4)
                            .addComponent(d_keyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(480, 480, 480)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(517, 517, 517)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(d_open)
                            .addComponent(d_save)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(choose_key)))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit)
                .addGap(548, 548, 548))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addComponent(d_open)
                            .addGap(31, 31, 31))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(e_open)
                            .addGap(21, 21, 21)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(d_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(choose_key))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(26, 26, 26)
                                    .addComponent(e_save))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(d_keyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(encrypt)
                    .addComponent(decrypt))
                .addGap(5, 5, 5)
                .addComponent(exit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void e_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_openActionPerformed
    JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        int option = chooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
          File[] sf = chooser.getSelectedFiles();
          String filelist = "nothing";
          if (sf.length > 0) filelist = sf[0].getAbsolutePath();
          for (int i = 1; i < sf.length; i++) {
            filelist += ", " + sf[i].getName();
          }
          e_openfield.setText( filelist);
        }
        else {
          e_openfield.setText("");
        }
        
    }//GEN-LAST:event_e_openActionPerformed

    private void d_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_openActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        int option = chooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
          File[] sf = chooser.getSelectedFiles();
          String filelist = "nothing";
          if (sf.length > 0) filelist = sf[0].getAbsolutePath();
          for (int i = 1; i < sf.length; i++) {
            filelist += ", " + sf[i].getName();
          }
          d_openfield.setText( filelist);
        }
        else {
          d_openfield.setText("");
        }
    }//GEN-LAST:event_d_openActionPerformed

    private void e_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_saveActionPerformed
        JFileChooser chooser = new JFileChooser();
        int option = chooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
          e_savefield.setText("" + ((chooser.getSelectedFile()!=null)?
                            chooser.getSelectedFile().getAbsolutePath():"nothing"));
        }
        else {
          e_savefield.setText("");
        }
    }//GEN-LAST:event_e_saveActionPerformed

    private void d_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d_saveActionPerformed
       JFileChooser chooser = new JFileChooser();
        int option = chooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
          d_savefield.setText("" + ((chooser.getSelectedFile()!=null)?
                            chooser.getSelectedFile().getAbsolutePath():"nothing"));
        }
        else {
          d_savefield.setText("");
        }
    }//GEN-LAST:event_d_saveActionPerformed

    private void encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptActionPerformed
        
        String secretFilePath = e_openfield.getText();
        String saveFilePath = e_savefield.getText();
        
        File secretFile, saveFile, keyFile;
        secretFile = new File(secretFilePath);
        saveFile = new File(saveFilePath);
        keyFile = new File(saveFile.getParent() + File.separator +  secretFile.getName() + "-key.txt");
        
        //generate a new aes key
        try{
            aes.makeKey();
        }catch(NoSuchAlgorithmException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error in generating aes key. No such algoritm found", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            System.exit(2);
        }
        
        //Save aes key to file
        try{
            aes.saveKey(keyFile, keyPair.getPublicKey());
        }catch(IOException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error in saving key", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3);
            return;
        }
        
        //encrypt the file
        try{
            aes.encrypt(secretFile, saveFile);
        }catch(IOException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error in encrypting file", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3);
            return;
        }catch(InvalidKeyException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Key error", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3); 
            return;
        }
        
        JOptionPane.showMessageDialog(null, "Encryption success", "Success", JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_encryptActionPerformed

    private void choose_keyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choose_keyActionPerformed
        JFileChooser chooser = new JFileChooser();
        int option = chooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
          d_keyLabel.setText("" + ((chooser.getSelectedFile()!=null)?
                            chooser.getSelectedFile().getAbsolutePath():"nothing"));
        }
        else {
          d_keyLabel.setText("");
        }
        
    }//GEN-LAST:event_choose_keyActionPerformed

    private void decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptActionPerformed
        String encryptedFilePath = d_openfield.getText();
        String saveFilePath = d_savefield.getText();
        String keyFilePath = d_keyLabel.getText();
        
        File encryptedFile, saveFile, keyFile;
        encryptedFile = new File(encryptedFilePath);
        saveFile = new File(saveFilePath);
        keyFile = new File(keyFilePath);
        
        //loads aes key
        try{
            aes.loadKey(keyFile, keyPair.getPrivateKey());
        }catch(IOException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Key loading error", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3); 
            return;
        }
        
        //decrypt the file
        try{
            aes.decrypt(encryptedFile, saveFile);    
        }catch(IOException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error in encrypting file", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3);
            return;
        }catch(InvalidKeyException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Key error", "Fatal Error", JOptionPane.ERROR_MESSAGE);
            //System.exit(3); 
            return;
        }
        
        JOptionPane.showMessageDialog(null, "Decryption success", "Success", JOptionPane.PLAIN_MESSAGE);
        
    }//GEN-LAST:event_decryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(encrypt_decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(encrypt_decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(encrypt_decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(encrypt_decrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new encrypt_decrypt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choose_key;
    private javax.swing.JLabel d_keyLabel;
    private javax.swing.JButton d_open;
    private javax.swing.JTextArea d_openfield;
    private javax.swing.JButton d_save;
    private javax.swing.JTextArea d_savefield;
    private javax.swing.JButton decrypt;
    private javax.swing.JButton e_open;
    private javax.swing.JTextArea e_openfield;
    private javax.swing.JButton e_save;
    private javax.swing.JTextArea e_savefield;
    private javax.swing.JButton encrypt;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
